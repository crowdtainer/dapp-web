#####################################################################################
# Mailer service

# REDIS_CONNECTION_STRING=https://myServer:6379
# Note: The redis connection string should remain unchanged/unspecified here, when used 
# with the provided docker compose file (as it is meant to be within the same docker network).

SMTP_SERVER=smtp.gmail.com
SMTP_PORT=465
SMTP_SECURE=true
SMTP_USER=user1234
SMTP_PASSWORD=pasword1234
# Note: SMTP_SECURE as false uses STARTTLS (usually port 587). If enabled, SMTPS is used (usually at port 465)

EMAIL_FROM=yourusername@someprovider.com
EMAIL_SUBJECT='Crowdtainer validation code'
EMAIL_TEXT='Hello. Your validation code is %{otp_code}'
EMAIL_HTML='<h1>Hello</h1><br/><p>This is your validation code: %{otp_code}</p>'
# Note: %{otp_code} is a special string replaced with the actual OTP code.

INTERVAL_IN_MS=10000
# How long between each iteration to wait, for the service to run through its main loop.

####################################################################################
# Optional monitoring service webhooks to report important events/messages/errors. 
# Set an empty string to deactivate.

# Specify a URL that this service should ping to indicate to an external monitoring service that it is running.
# Alive ping
# Logs messages are sent to `${HEALTH_CHECK_URL}/log` endpoint via POST request.
# Log messages of failures are sent to `${HEALTH_CHECK_URL}/fail` endpoint via POST request.
HEALTH_CHECK_URL=''

# Amount of time that must have elapsed before sending another alive ping.
ALIVE_PING_INTERVAL_IN_SECONDS=60

####################################################################################