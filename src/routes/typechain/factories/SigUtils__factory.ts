/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BytesLike, Overrides } from "ethers";
import type { PromiseOrValue } from "../common";
import type { SigUtils, SigUtilsInterface } from "../SigUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct SigUtils.Permit",
        name: "_permit",
        type: "tuple",
      },
    ],
    name: "getTypedDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161029e38038061029e83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b61023f8061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806330adf81f1461003b578063ba20b89d14610074575b600080fd5b6100627f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60405190815260200160405180910390f35b61006261008236600461017f565b6000805461008f836100cb565b60405161190160f01b6020820152602281019290925260428201526062015b604051602081830303815290604052805190602001209050919050565b80516020808301516040808501516060860151608087015192516000966100ae967f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9969195919493920195865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461017a57600080fd5b919050565b600060a0828403121561019157600080fd5b60405160a0810181811067ffffffffffffffff821117156101c257634e487b7160e01b600052604160045260246000fd5b6040526101ce83610156565b81526101dc60208401610156565b6020820152604083013560408201526060830135606082015260808301356080820152809150509291505056fea264697066735822122005cab4dbb9212f7bc51cb0a87e3a2c1e73d0668da56c429fa3d0c8501a0ad20364736f6c63430008150033";

type SigUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SigUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SigUtils__factory extends ContractFactory {
  constructor(...args: SigUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DOMAIN_SEPARATOR: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SigUtils> {
    return super.deploy(
      _DOMAIN_SEPARATOR,
      overrides || {}
    ) as Promise<SigUtils>;
  }
  override getDeployTransaction(
    _DOMAIN_SEPARATOR: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DOMAIN_SEPARATOR, overrides || {});
  }
  override attach(address: string): SigUtils {
    return super.attach(address) as SigUtils;
  }
  override connect(signer: Signer): SigUtils__factory {
    return super.connect(signer) as SigUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SigUtilsInterface {
    return new utils.Interface(_abi) as SigUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SigUtils {
    return new Contract(address, _abi, signerOrProvider) as SigUtils;
  }
}
