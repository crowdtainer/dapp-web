/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMetadataService,
  IMetadataServiceInterface,
} from "../IMetadataService";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "crowdtainerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currentOwner",
            type: "address",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "unitPricePerType",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "quantities",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "productDescription",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "numberOfProducts",
            type: "uint256",
          },
        ],
        internalType: "struct Metadata",
        name: "",
        type: "tuple",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMetadataService__factory {
  static readonly abi = _abi;
  static createInterface(): IMetadataServiceInterface {
    return new utils.Interface(_abi) as IMetadataServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMetadataService {
    return new Contract(address, _abi, signerOrProvider) as IMetadataService;
  }
}
